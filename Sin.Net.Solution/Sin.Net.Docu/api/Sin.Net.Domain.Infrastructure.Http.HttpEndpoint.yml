### YamlMime:ManagedReference
items:
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint
  commentId: T:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint
  id: HttpEndpoint
  parent: Sin.Net.Domain.Infrastructure.Http
  children:
  - Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.#ctor
  - Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Authentication
  - Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.BaseAddress
  - Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Method
  - Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.MethodName
  - Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Request
  - Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Url
  langs:
  - csharp
  - vb
  name: HttpEndpoint
  nameWithType: HttpEndpoint
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint
  type: Class
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: HttpEndpoint
    path: ../Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
    startLine: 8
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Http
  summary: "\nSimple Data model class to represent a http service.\n"
  example: []
  syntax:
    content: public class HttpEndpoint
    content.vb: Public Class HttpEndpoint
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.#ctor
  commentId: M:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.#ctor
  id: '#ctor'
  parent: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint
  langs:
  - csharp
  - vb
  name: HttpEndpoint()
  nameWithType: HttpEndpoint.HttpEndpoint()
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.HttpEndpoint()
  type: Constructor
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: .ctor
    path: ../Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
    startLine: 20
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Http
  summary: "\nThe default constructor sets the method type to a GET-Method\n"
  example: []
  syntax:
    content: public HttpEndpoint()
    content.vb: Public Sub New
  overload: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Method
  commentId: M:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Method
  id: Method
  parent: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint
  langs:
  - csharp
  - vb
  name: Method()
  nameWithType: HttpEndpoint.Method()
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Method()
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Method
    path: ../Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
    startLine: 30
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Http
  summary: "\nReturns the HttpMethod class based on the property MethodName\n"
  example: []
  syntax:
    content: public HttpMethod Method()
    return:
      type: System.Net.Http.HttpMethod
      description: It`s wheater Get, Post, Put or Delete
    content.vb: Public Function Method As HttpMethod
  overload: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Method*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.BaseAddress
  commentId: P:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.BaseAddress
  id: BaseAddress
  parent: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint
  langs:
  - csharp
  - vb
  name: BaseAddress
  nameWithType: HttpEndpoint.BaseAddress
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.BaseAddress
  type: Property
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: BaseAddress
    path: ../Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
    startLine: 52
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Http
  summary: "\nGets or sets the base address of the REST service\n"
  example: []
  syntax:
    content: public string BaseAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BaseAddress As String
  overload: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.BaseAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Request
  commentId: P:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Request
  id: Request
  parent: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: HttpEndpoint.Request
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Request
  type: Property
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Request
    path: ../Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
    startLine: 57
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Http
  summary: "\nGets or sets the request query\n"
  example: []
  syntax:
    content: public string Request { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Request As String
  overload: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Request*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.MethodName
  commentId: P:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.MethodName
  id: MethodName
  parent: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint
  langs:
  - csharp
  - vb
  name: MethodName
  nameWithType: HttpEndpoint.MethodName
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.MethodName
  type: Property
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: MethodName
    path: ../Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
    startLine: 63
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Http
  summary: "\nGets or sets the name of the method. Allowed names are Get, Post, Put or Delete.\nCase sensitivity is ignored, because the property it will be used in lower case.\n"
  example: []
  syntax:
    content: public string MethodName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MethodName As String
  overload: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.MethodName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Url
  commentId: P:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Url
  id: Url
  parent: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: HttpEndpoint.Url
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Url
  type: Property
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Url
    path: ../Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
    startLine: 68
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Http
  summary: "\nGets the complete Url out of base address and request\n"
  example: []
  syntax:
    content: public string Url { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Url As String
  overload: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Url*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Authentication
  commentId: P:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Authentication
  id: Authentication
  parent: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint
  langs:
  - csharp
  - vb
  name: Authentication
  nameWithType: HttpEndpoint.Authentication
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Authentication
  type: Property
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Authentication
    path: ../Sin.Net.Domain/Infrastructure/Http/HttpEndpoint.cs
    startLine: 89
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Http
  summary: "\nGets or sets an optional authentication string or API key for requests.\n"
  example: []
  syntax:
    content: public string Authentication { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Authentication As String
  overload: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Authentication*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sin.Net.Domain.Infrastructure.Http
  commentId: N:Sin.Net.Domain.Infrastructure.Http
  name: Sin.Net.Domain.Infrastructure.Http
  nameWithType: Sin.Net.Domain.Infrastructure.Http
  fullName: Sin.Net.Domain.Infrastructure.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  parent: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  definition: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  name: Clone()
  nameWithType: ObjectCloneExtensions.Clone()
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone()
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  parent: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  definition: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  name: Clone<HttpEndpoint>()
  nameWithType: ObjectCloneExtensions.Clone<HttpEndpoint>()
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<Sin.Net.Domain.Infrastructure.Http.HttpEndpoint>()
  nameWithType.vb: ObjectCloneExtensions.Clone(Of HttpEndpoint)()
  fullName.vb: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of Sin.Net.Domain.Infrastructure.Http.HttpEndpoint)()
  name.vb: Clone(Of HttpEndpoint)()
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
    name: Clone<HttpEndpoint>
    nameWithType: ObjectCloneExtensions.Clone<HttpEndpoint>
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<Sin.Net.Domain.Infrastructure.Http.HttpEndpoint>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
    name: Clone(Of HttpEndpoint)
    nameWithType: ObjectCloneExtensions.Clone(Of HttpEndpoint)
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of Sin.Net.Domain.Infrastructure.Http.HttpEndpoint)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  name: SecureAccess(SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  name: SecureAccess(Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  isExternal: true
  name: Clone(Object)
  nameWithType: ObjectCloneExtensions.Clone(Object)
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  commentId: T:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  parent: Sin.Net.Domain.System.Extensions
  name: ObjectCloneExtensions
  nameWithType: ObjectCloneExtensions
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  name: Clone<T>(T)
  nameWithType: ObjectCloneExtensions.Clone<T>(T)
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<T>(T)
  nameWithType.vb: ObjectCloneExtensions.Clone(Of T)(T)
  fullName.vb: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of T)(T)
  name.vb: Clone(Of T)(T)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
    name: Clone<T>
    nameWithType: ObjectCloneExtensions.Clone<T>
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
    name: Clone(Of T)
    nameWithType: ObjectCloneExtensions.Clone(Of T)
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  isExternal: true
  name: SecureAccess(Object, SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions
  commentId: T:Sin.Net.Domain.System.Security.SecurityExtensions
  parent: Sin.Net.Domain.System.Security
  name: SecurityExtensions
  nameWithType: SecurityExtensions
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  isExternal: true
  name: SecureAccess(Object, Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Extensions
  commentId: N:Sin.Net.Domain.System.Extensions
  name: Sin.Net.Domain.System.Extensions
  nameWithType: Sin.Net.Domain.System.Extensions
  fullName: Sin.Net.Domain.System.Extensions
- uid: Sin.Net.Domain.System.Security
  commentId: N:Sin.Net.Domain.System.Security
  name: Sin.Net.Domain.System.Security
  nameWithType: Sin.Net.Domain.System.Security
  fullName: Sin.Net.Domain.System.Security
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.#ctor*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.#ctor
  name: HttpEndpoint
  nameWithType: HttpEndpoint.HttpEndpoint
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.HttpEndpoint
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Method*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Method
  name: Method
  nameWithType: HttpEndpoint.Method
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Method
- uid: System.Net.Http.HttpMethod
  commentId: T:System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: true
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.BaseAddress*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.BaseAddress
  name: BaseAddress
  nameWithType: HttpEndpoint.BaseAddress
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.BaseAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Request*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Request
  name: Request
  nameWithType: HttpEndpoint.Request
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Request
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.MethodName*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.MethodName
  name: MethodName
  nameWithType: HttpEndpoint.MethodName
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.MethodName
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Url*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Url
  name: Url
  nameWithType: HttpEndpoint.Url
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Url
- uid: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Authentication*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Authentication
  name: Authentication
  nameWithType: HttpEndpoint.Authentication
  fullName: Sin.Net.Domain.Infrastructure.Http.HttpEndpoint.Authentication
