### YamlMime:ManagedReference
items:
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs
  commentId: T:Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs
  id: MqttConnectedEventArgs
  parent: Sin.Net.Domain.Infrastructure.Mqtt
  children:
  - Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.#ctor(System.String,System.Int32,System.String)
  - Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Broker
  - Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ClientID
  - Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Port
  - Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ToString
  langs:
  - csharp
  - vb
  name: MqttConnectedEventArgs
  nameWithType: MqttConnectedEventArgs
  fullName: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs
  type: Class
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: MqttConnectedEventArgs
    path: ../Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
    startLine: 4
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Mqtt
  syntax:
    content: public class MqttConnectedEventArgs
    content.vb: Public Class MqttConnectedEventArgs
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.#ctor(System.String,System.Int32,System.String)
  commentId: M:Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.#ctor(System.String,System.Int32,System.String)
  id: '#ctor(System.String,System.Int32,System.String)'
  parent: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs
  langs:
  - csharp
  - vb
  name: MqttConnectedEventArgs(String, Int32, String)
  nameWithType: MqttConnectedEventArgs.MqttConnectedEventArgs(String, Int32, String)
  fullName: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.MqttConnectedEventArgs(System.String, System.Int32, System.String)
  type: Constructor
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: .ctor
    path: ../Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
    startLine: 8
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Mqtt
  syntax:
    content: public MqttConnectedEventArgs(string broker, int port, string clientId)
    parameters:
    - id: broker
      type: System.String
    - id: port
      type: System.Int32
    - id: clientId
      type: System.String
    content.vb: Public Sub New(broker As String, port As Integer, clientId As String)
  overload: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ToString
  commentId: M:Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ToString
  id: ToString
  parent: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MqttConnectedEventArgs.ToString()
  fullName: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ToString()
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: ToString
    path: ../Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
    startLine: 19
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Mqtt
  summary: "\nGets the string of the other properties.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Broker
  commentId: P:Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Broker
  id: Broker
  parent: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs
  langs:
  - csharp
  - vb
  name: Broker
  nameWithType: MqttConnectedEventArgs.Broker
  fullName: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Broker
  type: Property
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Broker
    path: ../Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
    startLine: 26
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Mqtt
  syntax:
    content: public string Broker { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Broker As String
  overload: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Broker*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Port
  commentId: P:Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Port
  id: Port
  parent: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: MqttConnectedEventArgs.Port
  fullName: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Port
  type: Property
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Port
    path: ../Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
    startLine: 28
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Mqtt
  syntax:
    content: public int Port { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Port As Integer
  overload: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Port*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ClientID
  commentId: P:Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ClientID
  id: ClientID
  parent: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs
  langs:
  - csharp
  - vb
  name: ClientID
  nameWithType: MqttConnectedEventArgs.ClientID
  fullName: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ClientID
  type: Property
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: ClientID
    path: ../Sin.Net.Domain/Infrastructure/Mqtt/MqttConnectedEventArgs.cs
    startLine: 30
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Mqtt
  syntax:
    content: public string ClientID { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ClientID As String
  overload: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ClientID*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sin.Net.Domain.Infrastructure.Mqtt
  commentId: N:Sin.Net.Domain.Infrastructure.Mqtt
  name: Sin.Net.Domain.Infrastructure.Mqtt
  nameWithType: Sin.Net.Domain.Infrastructure.Mqtt
  fullName: Sin.Net.Domain.Infrastructure.Mqtt
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  parent: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  definition: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  name: Clone()
  nameWithType: ObjectCloneExtensions.Clone()
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone()
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  parent: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  definition: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  name: Clone<MqttConnectedEventArgs>()
  nameWithType: ObjectCloneExtensions.Clone<MqttConnectedEventArgs>()
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs>()
  nameWithType.vb: ObjectCloneExtensions.Clone(Of MqttConnectedEventArgs)()
  fullName.vb: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs)()
  name.vb: Clone(Of MqttConnectedEventArgs)()
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
    name: Clone<MqttConnectedEventArgs>
    nameWithType: ObjectCloneExtensions.Clone<MqttConnectedEventArgs>
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
    name: Clone(Of MqttConnectedEventArgs)
    nameWithType: ObjectCloneExtensions.Clone(Of MqttConnectedEventArgs)
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  name: SecureAccess(SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  name: SecureAccess(Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  isExternal: true
  name: Clone(Object)
  nameWithType: ObjectCloneExtensions.Clone(Object)
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  commentId: T:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  parent: Sin.Net.Domain.System.Extensions
  name: ObjectCloneExtensions
  nameWithType: ObjectCloneExtensions
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  name: Clone<T>(T)
  nameWithType: ObjectCloneExtensions.Clone<T>(T)
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<T>(T)
  nameWithType.vb: ObjectCloneExtensions.Clone(Of T)(T)
  fullName.vb: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of T)(T)
  name.vb: Clone(Of T)(T)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
    name: Clone<T>
    nameWithType: ObjectCloneExtensions.Clone<T>
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
    name: Clone(Of T)
    nameWithType: ObjectCloneExtensions.Clone(Of T)
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  isExternal: true
  name: SecureAccess(Object, SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions
  commentId: T:Sin.Net.Domain.System.Security.SecurityExtensions
  parent: Sin.Net.Domain.System.Security
  name: SecurityExtensions
  nameWithType: SecurityExtensions
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  isExternal: true
  name: SecureAccess(Object, Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Extensions
  commentId: N:Sin.Net.Domain.System.Extensions
  name: Sin.Net.Domain.System.Extensions
  nameWithType: Sin.Net.Domain.System.Extensions
  fullName: Sin.Net.Domain.System.Extensions
- uid: Sin.Net.Domain.System.Security
  commentId: N:Sin.Net.Domain.System.Security
  name: Sin.Net.Domain.System.Security
  nameWithType: Sin.Net.Domain.System.Security
  fullName: Sin.Net.Domain.System.Security
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.#ctor*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.#ctor
  name: MqttConnectedEventArgs
  nameWithType: MqttConnectedEventArgs.MqttConnectedEventArgs
  fullName: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.MqttConnectedEventArgs
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ToString*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ToString
  name: ToString
  nameWithType: MqttConnectedEventArgs.ToString
  fullName: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ToString
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Broker*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Broker
  name: Broker
  nameWithType: MqttConnectedEventArgs.Broker
  fullName: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Broker
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Port*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Port
  name: Port
  nameWithType: MqttConnectedEventArgs.Port
  fullName: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.Port
- uid: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ClientID*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ClientID
  name: ClientID
  nameWithType: MqttConnectedEventArgs.ClientID
  fullName: Sin.Net.Domain.Infrastructure.Mqtt.MqttConnectedEventArgs.ClientID
