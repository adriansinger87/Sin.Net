### YamlMime:ManagedReference
items:
- uid: Sin.Net.Persistence.IO.Json.TypedSerializationBinder
  commentId: T:Sin.Net.Persistence.IO.Json.TypedSerializationBinder
  id: TypedSerializationBinder
  parent: Sin.Net.Persistence.IO.Json
  children:
  - Sin.Net.Persistence.IO.Json.TypedSerializationBinder.#ctor
  - Sin.Net.Persistence.IO.Json.TypedSerializationBinder.#ctor(System.Collections.Generic.List{System.Type})
  - Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToName(System.Type,System.String@,System.String@)
  - Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToType(System.String,System.String)
  - Sin.Net.Persistence.IO.Json.TypedSerializationBinder.KnownTypes
  langs:
  - csharp
  - vb
  name: TypedSerializationBinder
  nameWithType: TypedSerializationBinder
  fullName: Sin.Net.Persistence.IO.Json.TypedSerializationBinder
  type: Class
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: TypedSerializationBinder
    path: ../Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
    startLine: 8
  assemblies:
  - Sin.Net.Persistence
  namespace: Sin.Net.Persistence.IO.Json
  syntax:
    content: 'public class TypedSerializationBinder : ISerializationBinder'
    content.vb: >-
      Public Class TypedSerializationBinder

          Implements ISerializationBinder
  inheritance:
  - System.Object
  implements:
  - Newtonsoft.Json.Serialization.ISerializationBinder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.#ctor
  commentId: M:Sin.Net.Persistence.IO.Json.TypedSerializationBinder.#ctor
  id: '#ctor'
  parent: Sin.Net.Persistence.IO.Json.TypedSerializationBinder
  langs:
  - csharp
  - vb
  name: TypedSerializationBinder()
  nameWithType: TypedSerializationBinder.TypedSerializationBinder()
  fullName: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.TypedSerializationBinder()
  type: Constructor
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: .ctor
    path: ../Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
    startLine: 15
  assemblies:
  - Sin.Net.Persistence
  namespace: Sin.Net.Persistence.IO.Json
  summary: "\nDefault constructor with an empty list of known types.\n"
  example: []
  syntax:
    content: public TypedSerializationBinder()
    content.vb: Public Sub New
  overload: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.#ctor(System.Collections.Generic.List{System.Type})
  commentId: M:Sin.Net.Persistence.IO.Json.TypedSerializationBinder.#ctor(System.Collections.Generic.List{System.Type})
  id: '#ctor(System.Collections.Generic.List{System.Type})'
  parent: Sin.Net.Persistence.IO.Json.TypedSerializationBinder
  langs:
  - csharp
  - vb
  name: TypedSerializationBinder(List<Type>)
  nameWithType: TypedSerializationBinder.TypedSerializationBinder(List<Type>)
  fullName: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.TypedSerializationBinder(System.Collections.Generic.List<System.Type>)
  type: Constructor
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: .ctor
    path: ../Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
    startLine: 24
  assemblies:
  - Sin.Net.Persistence
  namespace: Sin.Net.Persistence.IO.Json
  summary: "\nConstructor with a list of known types as parameter.\n"
  example: []
  syntax:
    content: public TypedSerializationBinder(List<Type> types)
    parameters:
    - id: types
      type: System.Collections.Generic.List{System.Type}
      description: The list of pred√©fined types.
    content.vb: Public Sub New(types As List(Of Type))
  overload: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.#ctor*
  nameWithType.vb: TypedSerializationBinder.TypedSerializationBinder(List(Of Type))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.TypedSerializationBinder(System.Collections.Generic.List(Of System.Type))
  name.vb: TypedSerializationBinder(List(Of Type))
- uid: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToType(System.String,System.String)
  commentId: M:Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToType(System.String,System.String)
  id: BindToType(System.String,System.String)
  parent: Sin.Net.Persistence.IO.Json.TypedSerializationBinder
  langs:
  - csharp
  - vb
  name: BindToType(String, String)
  nameWithType: TypedSerializationBinder.BindToType(String, String)
  fullName: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToType(System.String, System.String)
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: BindToType
    path: ../Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
    startLine: 37
  assemblies:
  - Sin.Net.Persistence
  namespace: Sin.Net.Persistence.IO.Json
  summary: "\nOverriden Method to bind an object to an type.\n"
  example: []
  syntax:
    content: public Type BindToType(string assemblyName, string typeName)
    parameters:
    - id: assemblyName
      type: System.String
      description: ''
    - id: typeName
      type: System.String
      description: ''
    return:
      type: System.Type
      description: ''
    content.vb: Public Function BindToType(assemblyName As String, typeName As String) As Type
  overload: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToType*
  implements:
  - Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToName(System.Type,System.String@,System.String@)
  commentId: M:Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToName(System.Type,System.String@,System.String@)
  id: BindToName(System.Type,System.String@,System.String@)
  parent: Sin.Net.Persistence.IO.Json.TypedSerializationBinder
  langs:
  - csharp
  - vb
  name: BindToName(Type, out String, out String)
  nameWithType: TypedSerializationBinder.BindToName(Type, out String, out String)
  fullName: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToName(System.Type, out System.String, out System.String)
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: BindToName
    path: ../Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
    startLine: 48
  assemblies:
  - Sin.Net.Persistence
  namespace: Sin.Net.Persistence.IO.Json
  summary: "\nOverridden Method to bind a type to a name.\n"
  example: []
  syntax:
    content: public void BindToName(Type serializedType, out string assemblyName, out string typeName)
    parameters:
    - id: serializedType
      type: System.Type
      description: ''
    - id: assemblyName
      type: System.String
      description: ''
    - id: typeName
      type: System.String
      description: ''
    content.vb: Public Sub BindToName(serializedType As Type, ByRef assemblyName As String, ByRef typeName As String)
  overload: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToName*
  implements:
  - Newtonsoft.Json.Serialization.ISerializationBinder.BindToName(System.Type,System.String@,System.String@)
  nameWithType.vb: TypedSerializationBinder.BindToName(Type, ByRef String, ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToName(System.Type, ByRef System.String, ByRef System.String)
  name.vb: BindToName(Type, ByRef String, ByRef String)
- uid: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.KnownTypes
  commentId: P:Sin.Net.Persistence.IO.Json.TypedSerializationBinder.KnownTypes
  id: KnownTypes
  parent: Sin.Net.Persistence.IO.Json.TypedSerializationBinder
  langs:
  - csharp
  - vb
  name: KnownTypes
  nameWithType: TypedSerializationBinder.KnownTypes
  fullName: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.KnownTypes
  type: Property
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: KnownTypes
    path: ../Sin.Net.Persistence/IO/Json/TypedSerializationBinder.cs
    startLine: 59
  assemblies:
  - Sin.Net.Persistence
  namespace: Sin.Net.Persistence.IO.Json
  summary: "\nGets or sets the List of types that should be resolved\n"
  example: []
  syntax:
    content: public List<Type> KnownTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Type}
    content.vb: Public Property KnownTypes As List(Of Type)
  overload: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.KnownTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sin.Net.Persistence.IO.Json
  commentId: N:Sin.Net.Persistence.IO.Json
  name: Sin.Net.Persistence.IO.Json
  nameWithType: Sin.Net.Persistence.IO.Json
  fullName: Sin.Net.Persistence.IO.Json
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Newtonsoft.Json.Serialization.ISerializationBinder
  commentId: T:Newtonsoft.Json.Serialization.ISerializationBinder
  parent: Newtonsoft.Json.Serialization
  isExternal: true
  name: ISerializationBinder
  nameWithType: ISerializationBinder
  fullName: Newtonsoft.Json.Serialization.ISerializationBinder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  name: SecureAccess(SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  name: SecureAccess(Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json.Serialization
  commentId: N:Newtonsoft.Json.Serialization
  isExternal: true
  name: Newtonsoft.Json.Serialization
  nameWithType: Newtonsoft.Json.Serialization
  fullName: Newtonsoft.Json.Serialization
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  isExternal: true
  name: SecureAccess(Object, SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions
  commentId: T:Sin.Net.Domain.System.Security.SecurityExtensions
  parent: Sin.Net.Domain.System.Security
  name: SecurityExtensions
  nameWithType: SecurityExtensions
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  isExternal: true
  name: SecureAccess(Object, Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security
  commentId: N:Sin.Net.Domain.System.Security
  name: Sin.Net.Domain.System.Security
  nameWithType: Sin.Net.Domain.System.Security
  fullName: Sin.Net.Domain.System.Security
- uid: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.#ctor*
  commentId: Overload:Sin.Net.Persistence.IO.Json.TypedSerializationBinder.#ctor
  name: TypedSerializationBinder
  nameWithType: TypedSerializationBinder.TypedSerializationBinder
  fullName: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.TypedSerializationBinder
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToType*
  commentId: Overload:Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToType
  name: BindToType
  nameWithType: TypedSerializationBinder.BindToType
  fullName: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToType
- uid: Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(System.String,System.String)
  commentId: M:Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(System.String,System.String)
  parent: Newtonsoft.Json.Serialization.ISerializationBinder
  isExternal: true
  name: BindToType(String, String)
  nameWithType: ISerializationBinder.BindToType(String, String)
  fullName: Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(System.String, System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(System.String,System.String)
    name: BindToType
    nameWithType: ISerializationBinder.BindToType
    fullName: Newtonsoft.Json.Serialization.ISerializationBinder.BindToType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.ISerializationBinder.BindToType(System.String,System.String)
    name: BindToType
    nameWithType: ISerializationBinder.BindToType
    fullName: Newtonsoft.Json.Serialization.ISerializationBinder.BindToType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToName*
  commentId: Overload:Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToName
  name: BindToName
  nameWithType: TypedSerializationBinder.BindToName
  fullName: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.BindToName
- uid: Newtonsoft.Json.Serialization.ISerializationBinder.BindToName(System.Type,System.String@,System.String@)
  commentId: M:Newtonsoft.Json.Serialization.ISerializationBinder.BindToName(System.Type,System.String@,System.String@)
  parent: Newtonsoft.Json.Serialization.ISerializationBinder
  isExternal: true
  name: BindToName(Type, String, String)
  nameWithType: ISerializationBinder.BindToName(Type, String, String)
  fullName: Newtonsoft.Json.Serialization.ISerializationBinder.BindToName(System.Type, System.String, System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.ISerializationBinder.BindToName(System.Type,System.String@,System.String@)
    name: BindToName
    nameWithType: ISerializationBinder.BindToName
    fullName: Newtonsoft.Json.Serialization.ISerializationBinder.BindToName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.ISerializationBinder.BindToName(System.Type,System.String@,System.String@)
    name: BindToName
    nameWithType: ISerializationBinder.BindToName
    fullName: Newtonsoft.Json.Serialization.ISerializationBinder.BindToName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.KnownTypes*
  commentId: Overload:Sin.Net.Persistence.IO.Json.TypedSerializationBinder.KnownTypes
  name: KnownTypes
  nameWithType: TypedSerializationBinder.KnownTypes
  fullName: Sin.Net.Persistence.IO.Json.TypedSerializationBinder.KnownTypes
