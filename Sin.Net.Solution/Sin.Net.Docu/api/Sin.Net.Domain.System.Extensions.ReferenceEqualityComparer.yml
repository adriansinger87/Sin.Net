### YamlMime:ManagedReference
items:
- uid: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer
  commentId: T:Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer
  id: ReferenceEqualityComparer
  parent: Sin.Net.Domain.System.Extensions
  children:
  - Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.Equals(System.Object,System.Object)
  - Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.GetHashCode(System.Object)
  langs:
  - csharp
  - vb
  name: ReferenceEqualityComparer
  nameWithType: ReferenceEqualityComparer
  fullName: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer
  type: Class
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/System/Extensions/ObjectCloneExtensions.cs
      branch: develop
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: ReferenceEqualityComparer
    path: ../Sin.Net.Domain/System/Extensions/ObjectCloneExtensions.cs
    startLine: 116
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.System.Extensions
  syntax:
    content: 'public class ReferenceEqualityComparer : EqualityComparer<object>, IEqualityComparer<object>, IEqualityComparer'
    content.vb: >-
      Public Class ReferenceEqualityComparer
          Inherits EqualityComparer(Of Object)
          Implements IEqualityComparer(Of Object), IEqualityComparer
  inheritance:
  - System.Object
  - System.Collections.Generic.EqualityComparer{System.Object}
  implements:
  - System.Collections.Generic.IEqualityComparer{System.Object}
  - System.Collections.IEqualityComparer
  inheritedMembers:
  - System.Collections.Generic.EqualityComparer{System.Object}.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  - System.Collections.Generic.EqualityComparer{System.Object}.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  - System.Collections.Generic.EqualityComparer{System.Object}.Default
  - System.Object.Equals(System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.Equals(System.Object,System.Object)
  commentId: M:Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.Equals(System.Object,System.Object)
  id: Equals(System.Object,System.Object)
  parent: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer
  langs:
  - csharp
  - vb
  name: Equals(Object, Object)
  nameWithType: ReferenceEqualityComparer.Equals(Object, Object)
  fullName: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.Equals(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/System/Extensions/ObjectCloneExtensions.cs
      branch: develop
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Equals
    path: ../Sin.Net.Domain/System/Extensions/ObjectCloneExtensions.cs
    startLine: 118
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.System.Extensions
  syntax:
    content: public override bool Equals(object x, object y)
    parameters:
    - id: x
      type: System.Object
    - id: y
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(x As Object, y As Object) As Boolean
  overridden: System.Collections.Generic.EqualityComparer{System.Object}.Equals(System.Object,System.Object)
  overload: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.GetHashCode(System.Object)
  commentId: M:Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.GetHashCode(System.Object)
  id: GetHashCode(System.Object)
  parent: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer
  langs:
  - csharp
  - vb
  name: GetHashCode(Object)
  nameWithType: ReferenceEqualityComparer.GetHashCode(Object)
  fullName: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.GetHashCode(System.Object)
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/System/Extensions/ObjectCloneExtensions.cs
      branch: develop
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: GetHashCode
    path: ../Sin.Net.Domain/System/Extensions/ObjectCloneExtensions.cs
    startLine: 122
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.System.Extensions
  syntax:
    content: public override int GetHashCode(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode(obj As Object) As Integer
  overridden: System.Collections.Generic.EqualityComparer{System.Object}.GetHashCode(System.Object)
  overload: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Sin.Net.Domain.System.Extensions
  commentId: N:Sin.Net.Domain.System.Extensions
  name: Sin.Net.Domain.System.Extensions
  nameWithType: Sin.Net.Domain.System.Extensions
  fullName: Sin.Net.Domain.System.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.EqualityComparer{System.Object}
  commentId: T:System.Collections.Generic.EqualityComparer{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.EqualityComparer`1
  name: EqualityComparer<Object>
  nameWithType: EqualityComparer<Object>
  fullName: System.Collections.Generic.EqualityComparer<System.Object>
  nameWithType.vb: EqualityComparer(Of Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.Object)
  name.vb: EqualityComparer(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1
    name: EqualityComparer
    nameWithType: EqualityComparer
    fullName: System.Collections.Generic.EqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1
    name: EqualityComparer
    nameWithType: EqualityComparer
    fullName: System.Collections.Generic.EqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{System.Object}
  commentId: T:System.Collections.Generic.IEqualityComparer{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<Object>
  nameWithType: IEqualityComparer<Object>
  fullName: System.Collections.Generic.IEqualityComparer<System.Object>
  nameWithType.vb: IEqualityComparer(Of Object)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of System.Object)
  name.vb: IEqualityComparer(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEqualityComparer
  commentId: T:System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections.Generic.EqualityComparer{System.Object}.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer{System.Object}.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  parent: System.Collections.Generic.EqualityComparer{System.Object}
  definition: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  name: IEqualityComparer.Equals(Object, Object)
  nameWithType: EqualityComparer<Object>.IEqualityComparer.Equals(Object, Object)
  fullName: System.Collections.Generic.EqualityComparer<System.Object>.System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  nameWithType.vb: EqualityComparer(Of Object).System.Collections.IEqualityComparer.Equals(Object, Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.Object).System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  name.vb: System.Collections.IEqualityComparer.Equals(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
    name: IEqualityComparer.Equals
    nameWithType: EqualityComparer<Object>.IEqualityComparer.Equals
    fullName: System.Collections.Generic.EqualityComparer<System.Object>.System.Collections.IEqualityComparer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
    name: System.Collections.IEqualityComparer.Equals
    nameWithType: EqualityComparer(Of Object).System.Collections.IEqualityComparer.Equals
    fullName: System.Collections.Generic.EqualityComparer(Of System.Object).System.Collections.IEqualityComparer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer{System.Object}.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer{System.Object}.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  parent: System.Collections.Generic.EqualityComparer{System.Object}
  definition: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  name: IEqualityComparer.GetHashCode(Object)
  nameWithType: EqualityComparer<Object>.IEqualityComparer.GetHashCode(Object)
  fullName: System.Collections.Generic.EqualityComparer<System.Object>.System.Collections.IEqualityComparer.GetHashCode(System.Object)
  nameWithType.vb: EqualityComparer(Of Object).System.Collections.IEqualityComparer.GetHashCode(Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.Object).System.Collections.IEqualityComparer.GetHashCode(System.Object)
  name.vb: System.Collections.IEqualityComparer.GetHashCode(Object)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
    name: IEqualityComparer.GetHashCode
    nameWithType: EqualityComparer<Object>.IEqualityComparer.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer<System.Object>.System.Collections.IEqualityComparer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
    name: System.Collections.IEqualityComparer.GetHashCode
    nameWithType: EqualityComparer(Of Object).System.Collections.IEqualityComparer.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer(Of System.Object).System.Collections.IEqualityComparer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer{System.Object}.Default
  commentId: P:System.Collections.Generic.EqualityComparer{System.Object}.Default
  parent: System.Collections.Generic.EqualityComparer{System.Object}
  definition: System.Collections.Generic.EqualityComparer`1.Default
  name: Default
  nameWithType: EqualityComparer<Object>.Default
  fullName: System.Collections.Generic.EqualityComparer<System.Object>.Default
  nameWithType.vb: EqualityComparer(Of Object).Default
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.Object).Default
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  parent: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  definition: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  name: Clone()
  nameWithType: ObjectCloneExtensions.Clone()
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone()
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  parent: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  definition: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  name: Clone<ReferenceEqualityComparer>()
  nameWithType: ObjectCloneExtensions.Clone<ReferenceEqualityComparer>()
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer>()
  nameWithType.vb: ObjectCloneExtensions.Clone(Of ReferenceEqualityComparer)()
  fullName.vb: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer)()
  name.vb: Clone(Of ReferenceEqualityComparer)()
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
    name: Clone<ReferenceEqualityComparer>
    nameWithType: ObjectCloneExtensions.Clone<ReferenceEqualityComparer>
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
    name: Clone(Of ReferenceEqualityComparer)
    nameWithType: ObjectCloneExtensions.Clone(Of ReferenceEqualityComparer)
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  name: SecureAccess(SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  name: SecureAccess(Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.EqualityComparer`1
  commentId: T:System.Collections.Generic.EqualityComparer`1
  isExternal: true
  name: EqualityComparer<T>
  nameWithType: EqualityComparer<T>
  fullName: System.Collections.Generic.EqualityComparer<T>
  nameWithType.vb: EqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T)
  name.vb: EqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1
    name: EqualityComparer
    nameWithType: EqualityComparer
    fullName: System.Collections.Generic.EqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1
    name: EqualityComparer
    nameWithType: EqualityComparer
    fullName: System.Collections.Generic.EqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
  isExternal: true
  name: IEqualityComparer.Equals(Object, Object)
  nameWithType: EqualityComparer<T>.IEqualityComparer.Equals(Object, Object)
  fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  nameWithType.vb: EqualityComparer(Of T).System.Collections.IEqualityComparer.Equals(Object, Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).System.Collections.IEqualityComparer.Equals(System.Object, System.Object)
  name.vb: System.Collections.IEqualityComparer.Equals(Object, Object)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
    name: IEqualityComparer.Equals
    nameWithType: EqualityComparer<T>.IEqualityComparer.Equals
    fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)
    name: System.Collections.IEqualityComparer.Equals
    nameWithType: EqualityComparer(Of T).System.Collections.IEqualityComparer.Equals
    fullName: System.Collections.Generic.EqualityComparer(Of T).System.Collections.IEqualityComparer.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
  isExternal: true
  name: IEqualityComparer.GetHashCode(Object)
  nameWithType: EqualityComparer<T>.IEqualityComparer.GetHashCode(Object)
  fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.GetHashCode(System.Object)
  nameWithType.vb: EqualityComparer(Of T).System.Collections.IEqualityComparer.GetHashCode(Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).System.Collections.IEqualityComparer.GetHashCode(System.Object)
  name.vb: System.Collections.IEqualityComparer.GetHashCode(Object)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
    name: IEqualityComparer.GetHashCode
    nameWithType: EqualityComparer<T>.IEqualityComparer.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)
    name: System.Collections.IEqualityComparer.GetHashCode
    nameWithType: EqualityComparer(Of T).System.Collections.IEqualityComparer.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer(Of T).System.Collections.IEqualityComparer.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer`1.Default
  commentId: P:System.Collections.Generic.EqualityComparer`1.Default
  isExternal: true
  name: Default
  nameWithType: EqualityComparer<T>.Default
  fullName: System.Collections.Generic.EqualityComparer<T>.Default
  nameWithType.vb: EqualityComparer(Of T).Default
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).Default
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  isExternal: true
  name: Clone(Object)
  nameWithType: ObjectCloneExtensions.Clone(Object)
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  commentId: T:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  parent: Sin.Net.Domain.System.Extensions
  name: ObjectCloneExtensions
  nameWithType: ObjectCloneExtensions
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  name: Clone<T>(T)
  nameWithType: ObjectCloneExtensions.Clone<T>(T)
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<T>(T)
  nameWithType.vb: ObjectCloneExtensions.Clone(Of T)(T)
  fullName.vb: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of T)(T)
  name.vb: Clone(Of T)(T)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
    name: Clone<T>
    nameWithType: ObjectCloneExtensions.Clone<T>
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
    name: Clone(Of T)
    nameWithType: ObjectCloneExtensions.Clone(Of T)
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  isExternal: true
  name: SecureAccess(Object, SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions
  commentId: T:Sin.Net.Domain.System.Security.SecurityExtensions
  parent: Sin.Net.Domain.System.Security
  name: SecurityExtensions
  nameWithType: SecurityExtensions
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  isExternal: true
  name: SecureAccess(Object, Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security
  commentId: N:Sin.Net.Domain.System.Security
  name: Sin.Net.Domain.System.Security
  nameWithType: Sin.Net.Domain.System.Security
  fullName: Sin.Net.Domain.System.Security
- uid: System.Collections.Generic.EqualityComparer{System.Object}.Equals(System.Object,System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer{System.Object}.Equals(System.Object,System.Object)
  parent: System.Collections.Generic.EqualityComparer{System.Object}
  definition: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
  name: Equals(Object, Object)
  nameWithType: EqualityComparer<Object>.Equals(Object, Object)
  fullName: System.Collections.Generic.EqualityComparer<System.Object>.Equals(System.Object, System.Object)
  nameWithType.vb: EqualityComparer(Of Object).Equals(Object, Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.Object).Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: EqualityComparer<Object>.Equals
    fullName: System.Collections.Generic.EqualityComparer<System.Object>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: EqualityComparer(Of Object).Equals
    fullName: System.Collections.Generic.EqualityComparer(Of System.Object).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.Equals*
  commentId: Overload:Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.Equals
  name: Equals
  nameWithType: ReferenceEqualityComparer.Equals
  fullName: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: EqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.EqualityComparer<T>.Equals(T, T)
  nameWithType.vb: EqualityComparer(Of T).Equals(T, T)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: EqualityComparer<T>.Equals
    fullName: System.Collections.Generic.EqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: EqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.EqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.EqualityComparer{System.Object}.GetHashCode(System.Object)
  commentId: M:System.Collections.Generic.EqualityComparer{System.Object}.GetHashCode(System.Object)
  parent: System.Collections.Generic.EqualityComparer{System.Object}
  definition: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(Object)
  nameWithType: EqualityComparer<Object>.GetHashCode(Object)
  fullName: System.Collections.Generic.EqualityComparer<System.Object>.GetHashCode(System.Object)
  nameWithType.vb: EqualityComparer(Of Object).GetHashCode(Object)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of System.Object).GetHashCode(System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: EqualityComparer<Object>.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer<System.Object>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: EqualityComparer(Of Object).GetHashCode
    fullName: System.Collections.Generic.EqualityComparer(Of System.Object).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.GetHashCode*
  commentId: Overload:Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.GetHashCode
  name: GetHashCode
  nameWithType: ReferenceEqualityComparer.GetHashCode
  fullName: Sin.Net.Domain.System.Extensions.ReferenceEqualityComparer.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: EqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.EqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: EqualityComparer(Of T).GetHashCode(T)
  fullName.vb: System.Collections.Generic.EqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: EqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.EqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: EqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.EqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
