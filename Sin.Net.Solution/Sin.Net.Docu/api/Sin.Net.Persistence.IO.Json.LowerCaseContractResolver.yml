### YamlMime:ManagedReference
items:
- uid: Sin.Net.Persistence.IO.Json.LowerCaseContractResolver
  commentId: T:Sin.Net.Persistence.IO.Json.LowerCaseContractResolver
  id: LowerCaseContractResolver
  parent: Sin.Net.Persistence.IO.Json
  children:
  - Sin.Net.Persistence.IO.Json.LowerCaseContractResolver.ResolvePropertyName(System.String)
  langs:
  - csharp
  - vb
  name: LowerCaseContractResolver
  nameWithType: LowerCaseContractResolver
  fullName: Sin.Net.Persistence.IO.Json.LowerCaseContractResolver
  type: Class
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Persistence/IO/Json/LowerCaseContractResolver.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: LowerCaseContractResolver
    path: ../Sin.Net.Persistence/IO/Json/LowerCaseContractResolver.cs
    startLine: 8
  assemblies:
  - Sin.Net.Persistence
  namespace: Sin.Net.Persistence.IO.Json
  syntax:
    content: 'public class LowerCaseContractResolver : DefaultContractResolver, IContractResolver'
    content.vb: >-
      Public Class LowerCaseContractResolver
          Inherits DefaultContractResolver
          Implements IContractResolver
  inheritance:
  - System.Object
  - Newtonsoft.Json.Serialization.DefaultContractResolver
  implements:
  - Newtonsoft.Json.Serialization.IContractResolver
  inheritedMembers:
  - Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration
  - Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags
  - Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers
  - Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface
  - Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute
  - Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreIsSpecifiedMembers
  - Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreShouldSerializeMembers
  - Newtonsoft.Json.Serialization.DefaultContractResolver.NamingStrategy
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - Sin.Net.Persistence.IO.Json.LowerCaseContractResolver.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sin.Net.Persistence.IO.Json.LowerCaseContractResolver.ResolvePropertyName(System.String)
  commentId: M:Sin.Net.Persistence.IO.Json.LowerCaseContractResolver.ResolvePropertyName(System.String)
  id: ResolvePropertyName(System.String)
  parent: Sin.Net.Persistence.IO.Json.LowerCaseContractResolver
  langs:
  - csharp
  - vb
  name: ResolvePropertyName(String)
  nameWithType: LowerCaseContractResolver.ResolvePropertyName(String)
  fullName: Sin.Net.Persistence.IO.Json.LowerCaseContractResolver.ResolvePropertyName(System.String)
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Persistence/IO/Json/LowerCaseContractResolver.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: ResolvePropertyName
    path: ../Sin.Net.Persistence/IO/Json/LowerCaseContractResolver.cs
    startLine: 10
  assemblies:
  - Sin.Net.Persistence
  namespace: Sin.Net.Persistence.IO.Json
  syntax:
    content: protected override string ResolvePropertyName(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
    return:
      type: System.String
    content.vb: Protected Overrides Function ResolvePropertyName(propertyName As String) As String
  overridden: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
  overload: Sin.Net.Persistence.IO.Json.LowerCaseContractResolver.ResolvePropertyName*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Sin.Net.Persistence.IO.Json
  commentId: N:Sin.Net.Persistence.IO.Json
  name: Sin.Net.Persistence.IO.Json
  nameWithType: Sin.Net.Persistence.IO.Json
  fullName: Sin.Net.Persistence.IO.Json
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver
  commentId: T:Newtonsoft.Json.Serialization.DefaultContractResolver
  parent: Newtonsoft.Json.Serialization
  isExternal: true
  name: DefaultContractResolver
  nameWithType: DefaultContractResolver
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver
- uid: Newtonsoft.Json.Serialization.IContractResolver
  commentId: T:Newtonsoft.Json.Serialization.IContractResolver
  parent: Newtonsoft.Json.Serialization
  isExternal: true
  name: IContractResolver
  nameWithType: IContractResolver
  fullName: Newtonsoft.Json.Serialization.IContractResolver
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: ResolveContract(Type)
  nameWithType: DefaultContractResolver.ResolveContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
    name: ResolveContract
    nameWithType: DefaultContractResolver.ResolveContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
    name: ResolveContract
    nameWithType: DefaultContractResolver.ResolveContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: GetSerializableMembers(Type)
  nameWithType: DefaultContractResolver.GetSerializableMembers(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
    name: GetSerializableMembers
    nameWithType: DefaultContractResolver.GetSerializableMembers
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
    name: GetSerializableMembers
    nameWithType: DefaultContractResolver.GetSerializableMembers
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateObjectContract(Type)
  nameWithType: DefaultContractResolver.CreateObjectContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
    name: CreateObjectContract
    nameWithType: DefaultContractResolver.CreateObjectContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
    name: CreateObjectContract
    nameWithType: DefaultContractResolver.CreateObjectContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateConstructorParameters(ConstructorInfo, JsonPropertyCollection)
  nameWithType: DefaultContractResolver.CreateConstructorParameters(ConstructorInfo, JsonPropertyCollection)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)
    name: CreateConstructorParameters
    nameWithType: DefaultContractResolver.CreateConstructorParameters
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Serialization.JsonPropertyCollection
    name: JsonPropertyCollection
    nameWithType: JsonPropertyCollection
    fullName: Newtonsoft.Json.Serialization.JsonPropertyCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)
    name: CreateConstructorParameters
    nameWithType: DefaultContractResolver.CreateConstructorParameters
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Serialization.JsonPropertyCollection
    name: JsonPropertyCollection
    nameWithType: JsonPropertyCollection
    fullName: Newtonsoft.Json.Serialization.JsonPropertyCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreatePropertyFromConstructorParameter(JsonProperty, ParameterInfo)
  nameWithType: DefaultContractResolver.CreatePropertyFromConstructorParameter(JsonProperty, ParameterInfo)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)
    name: CreatePropertyFromConstructorParameter
    nameWithType: DefaultContractResolver.CreatePropertyFromConstructorParameter
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Serialization.JsonProperty
    name: JsonProperty
    nameWithType: JsonProperty
    fullName: Newtonsoft.Json.Serialization.JsonProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)
    name: CreatePropertyFromConstructorParameter
    nameWithType: DefaultContractResolver.CreatePropertyFromConstructorParameter
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Serialization.JsonProperty
    name: JsonProperty
    nameWithType: JsonProperty
    fullName: Newtonsoft.Json.Serialization.JsonProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: ResolveContractConverter(Type)
  nameWithType: DefaultContractResolver.ResolveContractConverter(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
    name: ResolveContractConverter
    nameWithType: DefaultContractResolver.ResolveContractConverter
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
    name: ResolveContractConverter
    nameWithType: DefaultContractResolver.ResolveContractConverter
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateDictionaryContract(Type)
  nameWithType: DefaultContractResolver.CreateDictionaryContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
    name: CreateDictionaryContract
    nameWithType: DefaultContractResolver.CreateDictionaryContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
    name: CreateDictionaryContract
    nameWithType: DefaultContractResolver.CreateDictionaryContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateArrayContract(Type)
  nameWithType: DefaultContractResolver.CreateArrayContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
    name: CreateArrayContract
    nameWithType: DefaultContractResolver.CreateArrayContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
    name: CreateArrayContract
    nameWithType: DefaultContractResolver.CreateArrayContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreatePrimitiveContract(Type)
  nameWithType: DefaultContractResolver.CreatePrimitiveContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
    name: CreatePrimitiveContract
    nameWithType: DefaultContractResolver.CreatePrimitiveContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
    name: CreatePrimitiveContract
    nameWithType: DefaultContractResolver.CreatePrimitiveContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateLinqContract(Type)
  nameWithType: DefaultContractResolver.CreateLinqContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
    name: CreateLinqContract
    nameWithType: DefaultContractResolver.CreateLinqContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
    name: CreateLinqContract
    nameWithType: DefaultContractResolver.CreateLinqContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateISerializableContract(Type)
  nameWithType: DefaultContractResolver.CreateISerializableContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
    name: CreateISerializableContract
    nameWithType: DefaultContractResolver.CreateISerializableContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
    name: CreateISerializableContract
    nameWithType: DefaultContractResolver.CreateISerializableContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateDynamicContract(Type)
  nameWithType: DefaultContractResolver.CreateDynamicContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
    name: CreateDynamicContract
    nameWithType: DefaultContractResolver.CreateDynamicContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
    name: CreateDynamicContract
    nameWithType: DefaultContractResolver.CreateDynamicContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateStringContract(Type)
  nameWithType: DefaultContractResolver.CreateStringContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
    name: CreateStringContract
    nameWithType: DefaultContractResolver.CreateStringContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
    name: CreateStringContract
    nameWithType: DefaultContractResolver.CreateStringContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateContract(Type)
  nameWithType: DefaultContractResolver.CreateContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
    name: CreateContract
    nameWithType: DefaultContractResolver.CreateContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
    name: CreateContract
    nameWithType: DefaultContractResolver.CreateContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateProperties(Type, MemberSerialization)
  nameWithType: DefaultContractResolver.CreateProperties(Type, MemberSerialization)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)
    name: CreateProperties
    nameWithType: DefaultContractResolver.CreateProperties
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.MemberSerialization
    name: MemberSerialization
    nameWithType: MemberSerialization
    fullName: Newtonsoft.Json.MemberSerialization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)
    name: CreateProperties
    nameWithType: DefaultContractResolver.CreateProperties
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.MemberSerialization
    name: MemberSerialization
    nameWithType: MemberSerialization
    fullName: Newtonsoft.Json.MemberSerialization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateMemberValueProvider(MemberInfo)
  nameWithType: DefaultContractResolver.CreateMemberValueProvider(MemberInfo)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
    name: CreateMemberValueProvider
    nameWithType: DefaultContractResolver.CreateMemberValueProvider
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
    name: CreateMemberValueProvider
    nameWithType: DefaultContractResolver.CreateMemberValueProvider
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateProperty(MemberInfo, MemberSerialization)
  nameWithType: DefaultContractResolver.CreateProperty(MemberInfo, MemberSerialization)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)
    name: CreateProperty
    nameWithType: DefaultContractResolver.CreateProperty
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.MemberSerialization
    name: MemberSerialization
    nameWithType: MemberSerialization
    fullName: Newtonsoft.Json.MemberSerialization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)
    name: CreateProperty
    nameWithType: DefaultContractResolver.CreateProperty
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.MemberSerialization
    name: MemberSerialization
    nameWithType: MemberSerialization
    fullName: Newtonsoft.Json.MemberSerialization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: ResolveExtensionDataName(String)
  nameWithType: DefaultContractResolver.ResolveExtensionDataName(String)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
    name: ResolveExtensionDataName
    nameWithType: DefaultContractResolver.ResolveExtensionDataName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
    name: ResolveExtensionDataName
    nameWithType: DefaultContractResolver.ResolveExtensionDataName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: ResolveDictionaryKey(String)
  nameWithType: DefaultContractResolver.ResolveDictionaryKey(String)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
    name: ResolveDictionaryKey
    nameWithType: DefaultContractResolver.ResolveDictionaryKey
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
    name: ResolveDictionaryKey
    nameWithType: DefaultContractResolver.ResolveDictionaryKey
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: GetResolvedPropertyName(String)
  nameWithType: DefaultContractResolver.GetResolvedPropertyName(String)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
    name: GetResolvedPropertyName
    nameWithType: DefaultContractResolver.GetResolvedPropertyName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
    name: GetResolvedPropertyName
    nameWithType: DefaultContractResolver.GetResolvedPropertyName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: DynamicCodeGeneration
  nameWithType: DefaultContractResolver.DynamicCodeGeneration
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: DefaultMembersSearchFlags
  nameWithType: DefaultContractResolver.DefaultMembersSearchFlags
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: SerializeCompilerGeneratedMembers
  nameWithType: DefaultContractResolver.SerializeCompilerGeneratedMembers
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: IgnoreSerializableInterface
  nameWithType: DefaultContractResolver.IgnoreSerializableInterface
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: IgnoreSerializableAttribute
  nameWithType: DefaultContractResolver.IgnoreSerializableAttribute
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreIsSpecifiedMembers
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreIsSpecifiedMembers
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: IgnoreIsSpecifiedMembers
  nameWithType: DefaultContractResolver.IgnoreIsSpecifiedMembers
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreIsSpecifiedMembers
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreShouldSerializeMembers
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreShouldSerializeMembers
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: IgnoreShouldSerializeMembers
  nameWithType: DefaultContractResolver.IgnoreShouldSerializeMembers
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreShouldSerializeMembers
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.NamingStrategy
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.NamingStrategy
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: NamingStrategy
  nameWithType: DefaultContractResolver.NamingStrategy
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.NamingStrategy
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  parent: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  definition: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  name: Clone()
  nameWithType: ObjectCloneExtensions.Clone()
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone()
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Persistence.IO.Json.LowerCaseContractResolver.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  parent: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  definition: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  name: Clone<LowerCaseContractResolver>()
  nameWithType: ObjectCloneExtensions.Clone<LowerCaseContractResolver>()
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<Sin.Net.Persistence.IO.Json.LowerCaseContractResolver>()
  nameWithType.vb: ObjectCloneExtensions.Clone(Of LowerCaseContractResolver)()
  fullName.vb: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of Sin.Net.Persistence.IO.Json.LowerCaseContractResolver)()
  name.vb: Clone(Of LowerCaseContractResolver)()
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
    name: Clone<LowerCaseContractResolver>
    nameWithType: ObjectCloneExtensions.Clone<LowerCaseContractResolver>
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<Sin.Net.Persistence.IO.Json.LowerCaseContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
    name: Clone(Of LowerCaseContractResolver)
    nameWithType: ObjectCloneExtensions.Clone(Of LowerCaseContractResolver)
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of Sin.Net.Persistence.IO.Json.LowerCaseContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  name: SecureAccess(SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  name: SecureAccess(Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json.Serialization
  commentId: N:Newtonsoft.Json.Serialization
  isExternal: true
  name: Newtonsoft.Json.Serialization
  nameWithType: Newtonsoft.Json.Serialization
  fullName: Newtonsoft.Json.Serialization
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  isExternal: true
  name: Clone(Object)
  nameWithType: ObjectCloneExtensions.Clone(Object)
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  commentId: T:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  parent: Sin.Net.Domain.System.Extensions
  name: ObjectCloneExtensions
  nameWithType: ObjectCloneExtensions
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  name: Clone<T>(T)
  nameWithType: ObjectCloneExtensions.Clone<T>(T)
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<T>(T)
  nameWithType.vb: ObjectCloneExtensions.Clone(Of T)(T)
  fullName.vb: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of T)(T)
  name.vb: Clone(Of T)(T)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
    name: Clone<T>
    nameWithType: ObjectCloneExtensions.Clone<T>
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
    name: Clone(Of T)
    nameWithType: ObjectCloneExtensions.Clone(Of T)
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  isExternal: true
  name: SecureAccess(Object, SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions
  commentId: T:Sin.Net.Domain.System.Security.SecurityExtensions
  parent: Sin.Net.Domain.System.Security
  name: SecurityExtensions
  nameWithType: SecurityExtensions
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  isExternal: true
  name: SecureAccess(Object, Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Extensions
  commentId: N:Sin.Net.Domain.System.Extensions
  name: Sin.Net.Domain.System.Extensions
  nameWithType: Sin.Net.Domain.System.Extensions
  fullName: Sin.Net.Domain.System.Extensions
- uid: Sin.Net.Domain.System.Security
  commentId: N:Sin.Net.Domain.System.Security
  name: Sin.Net.Domain.System.Security
  nameWithType: Sin.Net.Domain.System.Security
  fullName: Sin.Net.Domain.System.Security
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: ResolvePropertyName(String)
  nameWithType: DefaultContractResolver.ResolvePropertyName(String)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
    name: ResolvePropertyName
    nameWithType: DefaultContractResolver.ResolvePropertyName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
    name: ResolvePropertyName
    nameWithType: DefaultContractResolver.ResolvePropertyName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Persistence.IO.Json.LowerCaseContractResolver.ResolvePropertyName*
  commentId: Overload:Sin.Net.Persistence.IO.Json.LowerCaseContractResolver.ResolvePropertyName
  name: ResolvePropertyName
  nameWithType: LowerCaseContractResolver.ResolvePropertyName
  fullName: Sin.Net.Persistence.IO.Json.LowerCaseContractResolver.ResolvePropertyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
