### YamlMime:ManagedReference
items:
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
  commentId: T:Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
  id: ISmtpControlable
  parent: Sin.Net.Domain.Infrastructure.Smtp
  children:
  - Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage(System.String,System.String,System.Object[])
  - Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage(System.String,System.String,System.String,System.String,System.Object[])
  - Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessages(System.String,System.String[],System.String,System.String,System.Object[])
  - Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Counter
  - Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Send
  langs:
  - csharp
  - vb
  name: ISmtpControlable
  nameWithType: ISmtpControlable
  fullName: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
  type: Interface
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: ISmtpControlable
    path: ../Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
    startLine: 7
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Smtp
  syntax:
    content: 'public interface ISmtpControlable : IControlable'
    content.vb: >-
      Public Interface ISmtpControlable

          Inherits IControlable
  inheritedMembers:
  - Sin.Net.Domain.Infrastructure.IControlable.Setup(Sin.Net.Domain.Config.ConfigBase)
  - Sin.Net.Domain.Infrastructure.IControlable.Connect
  - Sin.Net.Domain.Infrastructure.IControlable.Disconnect
  - Sin.Net.Domain.Infrastructure.IControlable.IsConnected
  - Sin.Net.Domain.Infrastructure.IControlable.Config
  extensionMethods:
  - System.Object.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage(System.String,System.String,System.Object[])
  commentId: M:Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage(System.String,System.String,System.Object[])
  id: BuildMessage(System.String,System.String,System.Object[])
  parent: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
  langs:
  - csharp
  - vb
  name: BuildMessage(String, String, Object[])
  nameWithType: ISmtpControlable.BuildMessage(String, String, Object[])
  fullName: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage(System.String, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: BuildMessage
    path: ../Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
    startLine: 9
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Smtp
  syntax:
    content: ISmtpControlable BuildMessage(string subject, string body, object[] attachment = null)
    parameters:
    - id: subject
      type: System.String
    - id: body
      type: System.String
    - id: attachment
      type: System.Object[]
    return:
      type: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
    content.vb: Function BuildMessage(subject As String, body As String, attachment As Object() = Nothing) As ISmtpControlable
  overload: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage*
  nameWithType.vb: ISmtpControlable.BuildMessage(String, String, Object())
  fullName.vb: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage(System.String, System.String, System.Object())
  name.vb: BuildMessage(String, String, Object())
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage(System.String,System.String,System.String,System.String,System.Object[])
  commentId: M:Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage(System.String,System.String,System.String,System.String,System.Object[])
  id: BuildMessage(System.String,System.String,System.String,System.String,System.Object[])
  parent: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
  langs:
  - csharp
  - vb
  name: BuildMessage(String, String, String, String, Object[])
  nameWithType: ISmtpControlable.BuildMessage(String, String, String, String, Object[])
  fullName: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage(System.String, System.String, System.String, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: BuildMessage
    path: ../Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
    startLine: 14
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Smtp
  syntax:
    content: ISmtpControlable BuildMessage(string sender, string receiver, string subject, string body, object[] attachment = null)
    parameters:
    - id: sender
      type: System.String
    - id: receiver
      type: System.String
    - id: subject
      type: System.String
    - id: body
      type: System.String
    - id: attachment
      type: System.Object[]
    return:
      type: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
    content.vb: Function BuildMessage(sender As String, receiver As String, subject As String, body As String, attachment As Object() = Nothing) As ISmtpControlable
  overload: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage*
  nameWithType.vb: ISmtpControlable.BuildMessage(String, String, String, String, Object())
  fullName.vb: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage(System.String, System.String, System.String, System.String, System.Object())
  name.vb: BuildMessage(String, String, String, String, Object())
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessages(System.String,System.String[],System.String,System.String,System.Object[])
  commentId: M:Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessages(System.String,System.String[],System.String,System.String,System.Object[])
  id: BuildMessages(System.String,System.String[],System.String,System.String,System.Object[])
  parent: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
  langs:
  - csharp
  - vb
  name: BuildMessages(String, String[], String, String, Object[])
  nameWithType: ISmtpControlable.BuildMessages(String, String[], String, String, Object[])
  fullName: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessages(System.String, System.String[], System.String, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: BuildMessages
    path: ../Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
    startLine: 21
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Smtp
  syntax:
    content: ISmtpControlable BuildMessages(string sender, string[] receivers, string subject, string body, object[] attachment = null)
    parameters:
    - id: sender
      type: System.String
    - id: receivers
      type: System.String[]
    - id: subject
      type: System.String
    - id: body
      type: System.String
    - id: attachment
      type: System.Object[]
    return:
      type: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
    content.vb: Function BuildMessages(sender As String, receivers As String(), subject As String, body As String, attachment As Object() = Nothing) As ISmtpControlable
  overload: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessages*
  nameWithType.vb: ISmtpControlable.BuildMessages(String, String(), String, String, Object())
  fullName.vb: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessages(System.String, System.String(), System.String, System.String, System.Object())
  name.vb: BuildMessages(String, String(), String, String, Object())
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Send
  commentId: M:Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Send
  id: Send
  parent: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
  langs:
  - csharp
  - vb
  name: Send()
  nameWithType: ISmtpControlable.Send()
  fullName: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Send()
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Send
    path: ../Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
    startLine: 28
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Smtp
  syntax:
    content: bool Send()
    return:
      type: System.Boolean
    content.vb: Function Send As Boolean
  overload: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Send*
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Counter
  commentId: P:Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Counter
  id: Counter
  parent: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
  langs:
  - csharp
  - vb
  name: Counter
  nameWithType: ISmtpControlable.Counter
  fullName: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Counter
  type: Property
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Counter
    path: ../Sin.Net.Domain/Infrastructure/Smtp/ISmtpControlable.cs
    startLine: 30
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Infrastructure.Smtp
  syntax:
    content: int Counter { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Counter As Integer
  overload: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Counter*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sin.Net.Domain.Infrastructure.Smtp
  commentId: N:Sin.Net.Domain.Infrastructure.Smtp
  name: Sin.Net.Domain.Infrastructure.Smtp
  nameWithType: Sin.Net.Domain.Infrastructure.Smtp
  fullName: Sin.Net.Domain.Infrastructure.Smtp
- uid: Sin.Net.Domain.Infrastructure.IControlable.Setup(Sin.Net.Domain.Config.ConfigBase)
  commentId: M:Sin.Net.Domain.Infrastructure.IControlable.Setup(Sin.Net.Domain.Config.ConfigBase)
  parent: Sin.Net.Domain.Infrastructure.IControlable
  name: Setup(ConfigBase)
  nameWithType: IControlable.Setup(ConfigBase)
  fullName: Sin.Net.Domain.Infrastructure.IControlable.Setup(Sin.Net.Domain.Config.ConfigBase)
  spec.csharp:
  - uid: Sin.Net.Domain.Infrastructure.IControlable.Setup(Sin.Net.Domain.Config.ConfigBase)
    name: Setup
    nameWithType: IControlable.Setup
    fullName: Sin.Net.Domain.Infrastructure.IControlable.Setup
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Config.ConfigBase
    name: ConfigBase
    nameWithType: ConfigBase
    fullName: Sin.Net.Domain.Config.ConfigBase
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.Infrastructure.IControlable.Setup(Sin.Net.Domain.Config.ConfigBase)
    name: Setup
    nameWithType: IControlable.Setup
    fullName: Sin.Net.Domain.Infrastructure.IControlable.Setup
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Config.ConfigBase
    name: ConfigBase
    nameWithType: ConfigBase
    fullName: Sin.Net.Domain.Config.ConfigBase
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.Infrastructure.IControlable.Connect
  commentId: M:Sin.Net.Domain.Infrastructure.IControlable.Connect
  parent: Sin.Net.Domain.Infrastructure.IControlable
  name: Connect()
  nameWithType: IControlable.Connect()
  fullName: Sin.Net.Domain.Infrastructure.IControlable.Connect()
  spec.csharp:
  - uid: Sin.Net.Domain.Infrastructure.IControlable.Connect
    name: Connect
    nameWithType: IControlable.Connect
    fullName: Sin.Net.Domain.Infrastructure.IControlable.Connect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.Infrastructure.IControlable.Connect
    name: Connect
    nameWithType: IControlable.Connect
    fullName: Sin.Net.Domain.Infrastructure.IControlable.Connect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.Infrastructure.IControlable.Disconnect
  commentId: M:Sin.Net.Domain.Infrastructure.IControlable.Disconnect
  parent: Sin.Net.Domain.Infrastructure.IControlable
  name: Disconnect()
  nameWithType: IControlable.Disconnect()
  fullName: Sin.Net.Domain.Infrastructure.IControlable.Disconnect()
  spec.csharp:
  - uid: Sin.Net.Domain.Infrastructure.IControlable.Disconnect
    name: Disconnect
    nameWithType: IControlable.Disconnect
    fullName: Sin.Net.Domain.Infrastructure.IControlable.Disconnect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.Infrastructure.IControlable.Disconnect
    name: Disconnect
    nameWithType: IControlable.Disconnect
    fullName: Sin.Net.Domain.Infrastructure.IControlable.Disconnect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.Infrastructure.IControlable.IsConnected
  commentId: P:Sin.Net.Domain.Infrastructure.IControlable.IsConnected
  parent: Sin.Net.Domain.Infrastructure.IControlable
  name: IsConnected
  nameWithType: IControlable.IsConnected
  fullName: Sin.Net.Domain.Infrastructure.IControlable.IsConnected
- uid: Sin.Net.Domain.Infrastructure.IControlable.Config
  commentId: P:Sin.Net.Domain.Infrastructure.IControlable.Config
  parent: Sin.Net.Domain.Infrastructure.IControlable
  name: Config
  nameWithType: IControlable.Config
  fullName: Sin.Net.Domain.Infrastructure.IControlable.Config
- uid: System.Object.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  parent: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  definition: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  name: Clone()
  nameWithType: ObjectCloneExtensions.Clone()
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone()
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  parent: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  definition: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  name: Clone<ISmtpControlable>()
  nameWithType: ObjectCloneExtensions.Clone<ISmtpControlable>()
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable>()
  nameWithType.vb: ObjectCloneExtensions.Clone(Of ISmtpControlable)()
  fullName.vb: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable)()
  name.vb: Clone(Of ISmtpControlable)()
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
    name: Clone<ISmtpControlable>
    nameWithType: ObjectCloneExtensions.Clone<ISmtpControlable>
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1
    name: Clone(Of ISmtpControlable)
    nameWithType: ObjectCloneExtensions.Clone(Of ISmtpControlable)
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  name: SecureAccess(SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  name: SecureAccess(Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.Infrastructure.IControlable
  commentId: T:Sin.Net.Domain.Infrastructure.IControlable
  parent: Sin.Net.Domain.Infrastructure
  name: IControlable
  nameWithType: IControlable
  fullName: Sin.Net.Domain.Infrastructure.IControlable
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  isExternal: true
  name: Clone(Object)
  nameWithType: ObjectCloneExtensions.Clone(Object)
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(System.Object)
    name: Clone
    nameWithType: ObjectCloneExtensions.Clone
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  commentId: T:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
  parent: Sin.Net.Domain.System.Extensions
  name: ObjectCloneExtensions
  nameWithType: ObjectCloneExtensions
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions
- uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  commentId: M:Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
  name: Clone<T>(T)
  nameWithType: ObjectCloneExtensions.Clone<T>(T)
  fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<T>(T)
  nameWithType.vb: ObjectCloneExtensions.Clone(Of T)(T)
  fullName.vb: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of T)(T)
  name.vb: Clone(Of T)(T)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
    name: Clone<T>
    nameWithType: ObjectCloneExtensions.Clone<T>
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone``1(``0)
    name: Clone(Of T)
    nameWithType: ObjectCloneExtensions.Clone(Of T)
    fullName: Sin.Net.Domain.System.Extensions.ObjectCloneExtensions.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  isExternal: true
  name: SecureAccess(Object, SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions
  commentId: T:Sin.Net.Domain.System.Security.SecurityExtensions
  parent: Sin.Net.Domain.System.Security
  name: SecurityExtensions
  nameWithType: SecurityExtensions
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  isExternal: true
  name: SecureAccess(Object, Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.Infrastructure
  commentId: N:Sin.Net.Domain.Infrastructure
  name: Sin.Net.Domain.Infrastructure
  nameWithType: Sin.Net.Domain.Infrastructure
  fullName: Sin.Net.Domain.Infrastructure
- uid: Sin.Net.Domain.System.Extensions
  commentId: N:Sin.Net.Domain.System.Extensions
  name: Sin.Net.Domain.System.Extensions
  nameWithType: Sin.Net.Domain.System.Extensions
  fullName: Sin.Net.Domain.System.Extensions
- uid: Sin.Net.Domain.System.Security
  commentId: N:Sin.Net.Domain.System.Security
  name: Sin.Net.Domain.System.Security
  nameWithType: Sin.Net.Domain.System.Security
  fullName: Sin.Net.Domain.System.Security
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage
  name: BuildMessage
  nameWithType: ISmtpControlable.BuildMessage
  fullName: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
  commentId: T:Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
  parent: Sin.Net.Domain.Infrastructure.Smtp
  name: ISmtpControlable
  nameWithType: ISmtpControlable
  fullName: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessages*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessages
  name: BuildMessages
  nameWithType: ISmtpControlable.BuildMessages
  fullName: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.BuildMessages
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Send*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Send
  name: Send
  nameWithType: ISmtpControlable.Send
  fullName: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Send
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Counter*
  commentId: Overload:Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Counter
  name: Counter
  nameWithType: ISmtpControlable.Counter
  fullName: Sin.Net.Domain.Infrastructure.Smtp.ISmtpControlable.Counter
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
