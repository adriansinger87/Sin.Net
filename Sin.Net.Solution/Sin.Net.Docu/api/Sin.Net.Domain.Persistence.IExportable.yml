### YamlMime:ManagedReference
items:
- uid: Sin.Net.Domain.Persistence.IExportable
  commentId: T:Sin.Net.Domain.Persistence.IExportable
  id: IExportable
  parent: Sin.Net.Domain.Persistence
  children:
  - Sin.Net.Domain.Persistence.IExportable.Build``1(``0)
  - Sin.Net.Domain.Persistence.IExportable.Build``1(``0,Sin.Net.Domain.Persistence.Adapter.IAdaptable)
  - Sin.Net.Domain.Persistence.IExportable.Export
  - Sin.Net.Domain.Persistence.IExportable.Setup(Sin.Net.Domain.Persistence.Settings.SettingsBase)
  - Sin.Net.Domain.Persistence.IExportable.Type
  langs:
  - csharp
  - vb
  name: IExportable
  nameWithType: IExportable
  fullName: Sin.Net.Domain.Persistence.IExportable
  type: Interface
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Persistence/IExportable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: IExportable
    path: Persistence/IExportable.cs
    startLine: 8
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Persistence
  summary: "\nInterface for concrete export functionality\n"
  example: []
  syntax:
    content: public interface IExportable
    content.vb: Public Interface IExportable
  extensionMethods:
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  - System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sin.Net.Domain.Persistence.IExportable.Setup(Sin.Net.Domain.Persistence.Settings.SettingsBase)
  commentId: M:Sin.Net.Domain.Persistence.IExportable.Setup(Sin.Net.Domain.Persistence.Settings.SettingsBase)
  id: Setup(Sin.Net.Domain.Persistence.Settings.SettingsBase)
  parent: Sin.Net.Domain.Persistence.IExportable
  langs:
  - csharp
  - vb
  name: Setup(SettingsBase)
  nameWithType: IExportable.Setup(SettingsBase)
  fullName: Sin.Net.Domain.Persistence.IExportable.Setup(Sin.Net.Domain.Persistence.Settings.SettingsBase)
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Persistence/IExportable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Setup
    path: Persistence/IExportable.cs
    startLine: 15
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Persistence
  summary: "\nTakes the cocnrete implementation of settings\n"
  example: []
  syntax:
    content: IExportable Setup(SettingsBase setting)
    parameters:
    - id: setting
      type: Sin.Net.Domain.Persistence.Settings.SettingsBase
      description: settings concretion
    return:
      type: Sin.Net.Domain.Persistence.IExportable
      description: the calling IExportable-instance for method chaining
    content.vb: Function Setup(setting As SettingsBase) As IExportable
  overload: Sin.Net.Domain.Persistence.IExportable.Setup*
- uid: Sin.Net.Domain.Persistence.IExportable.Build``1(``0)
  commentId: M:Sin.Net.Domain.Persistence.IExportable.Build``1(``0)
  id: Build``1(``0)
  parent: Sin.Net.Domain.Persistence.IExportable
  langs:
  - csharp
  - vb
  name: Build<T>(T)
  nameWithType: IExportable.Build<T>(T)
  fullName: Sin.Net.Domain.Persistence.IExportable.Build<T>(T)
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Persistence/IExportable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Build
    path: Persistence/IExportable.cs
    startLine: 23
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Persistence
  summary: "\nTakes a generic data type that shall be exported\n"
  example: []
  syntax:
    content: IExportable Build<T>(T data)
    parameters:
    - id: data
      type: '{T}'
      description: the instance of the data
    typeParameters:
    - id: T
      description: the explicit type of the data
    return:
      type: Sin.Net.Domain.Persistence.IExportable
      description: the calling IExportable-instance for method chaining
    content.vb: Function Build(Of T)(data As T) As IExportable
  overload: Sin.Net.Domain.Persistence.IExportable.Build*
  nameWithType.vb: IExportable.Build(Of T)(T)
  fullName.vb: Sin.Net.Domain.Persistence.IExportable.Build(Of T)(T)
  name.vb: Build(Of T)(T)
- uid: Sin.Net.Domain.Persistence.IExportable.Build``1(``0,Sin.Net.Domain.Persistence.Adapter.IAdaptable)
  commentId: M:Sin.Net.Domain.Persistence.IExportable.Build``1(``0,Sin.Net.Domain.Persistence.Adapter.IAdaptable)
  id: Build``1(``0,Sin.Net.Domain.Persistence.Adapter.IAdaptable)
  parent: Sin.Net.Domain.Persistence.IExportable
  langs:
  - csharp
  - vb
  name: Build<T>(T, IAdaptable)
  nameWithType: IExportable.Build<T>(T, IAdaptable)
  fullName: Sin.Net.Domain.Persistence.IExportable.Build<T>(T, Sin.Net.Domain.Persistence.Adapter.IAdaptable)
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Persistence/IExportable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Build
    path: Persistence/IExportable.cs
    startLine: 32
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Persistence
  summary: "\nTakes a generic data type that shall be exported\n"
  example: []
  syntax:
    content: IExportable Build<T>(T data, IAdaptable adapter)
    parameters:
    - id: data
      type: '{T}'
      description: the instance of the data
    - id: adapter
      type: Sin.Net.Domain.Persistence.Adapter.IAdaptable
      description: The concretion of an adapter that converts the data before the export
    typeParameters:
    - id: T
      description: the explicit type of the data
    return:
      type: Sin.Net.Domain.Persistence.IExportable
      description: the calling IExportable-instance for method chaining
    content.vb: Function Build(Of T)(data As T, adapter As IAdaptable) As IExportable
  overload: Sin.Net.Domain.Persistence.IExportable.Build*
  nameWithType.vb: IExportable.Build(Of T)(T, IAdaptable)
  fullName.vb: Sin.Net.Domain.Persistence.IExportable.Build(Of T)(T, Sin.Net.Domain.Persistence.Adapter.IAdaptable)
  name.vb: Build(Of T)(T, IAdaptable)
- uid: Sin.Net.Domain.Persistence.IExportable.Export
  commentId: M:Sin.Net.Domain.Persistence.IExportable.Export
  id: Export
  parent: Sin.Net.Domain.Persistence.IExportable
  langs:
  - csharp
  - vb
  name: Export()
  nameWithType: IExportable.Export()
  fullName: Sin.Net.Domain.Persistence.IExportable.Export()
  type: Method
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Persistence/IExportable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Export
    path: Persistence/IExportable.cs
    startLine: 38
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Persistence
  summary: "\nRuns the export implementation\n"
  example: []
  syntax:
    content: string Export()
    return:
      type: System.String
      description: The string is a generic result format and is specified by the export concretion
    content.vb: Function Export As String
  overload: Sin.Net.Domain.Persistence.IExportable.Export*
- uid: Sin.Net.Domain.Persistence.IExportable.Type
  commentId: P:Sin.Net.Domain.Persistence.IExportable.Type
  id: Type
  parent: Sin.Net.Domain.Persistence.IExportable
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IExportable.Type
  fullName: Sin.Net.Domain.Persistence.IExportable.Type
  type: Property
  source:
    remote:
      path: Sin.Net.Solution/Sin.Net.Domain/Persistence/IExportable.cs
      branch: master
      repo: git@github.com:adriansinger87/Sin.Net.git
    id: Type
    path: Persistence/IExportable.cs
    startLine: 45
  assemblies:
  - Sin.Net.Domain
  namespace: Sin.Net.Domain.Persistence
  summary: "\nGets the export type\n"
  example: []
  syntax:
    content: string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Type As String
  overload: Sin.Net.Domain.Persistence.IExportable.Type*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sin.Net.Domain.Persistence
  commentId: N:Sin.Net.Domain.Persistence
  name: Sin.Net.Domain.Persistence
  nameWithType: Sin.Net.Domain.Persistence
  fullName: Sin.Net.Domain.Persistence
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  name: SecureAccess(SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  parent: Sin.Net.Domain.System.Security.SecurityExtensions
  definition: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  name: SecureAccess(Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
  isExternal: true
  name: SecureAccess(Object, SecurityLevels, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, SecurityLevels, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, Sin.Net.Domain.Enumerations.SecurityLevels, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,Sin.Net.Domain.Enumerations.SecurityLevels,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Sin.Net.Domain.Enumerations.SecurityLevels
    name: SecurityLevels
    nameWithType: SecurityLevels
    fullName: Sin.Net.Domain.Enumerations.SecurityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security.SecurityExtensions
  commentId: T:Sin.Net.Domain.System.Security.SecurityExtensions
  parent: Sin.Net.Domain.System.Security
  name: SecurityExtensions
  nameWithType: SecurityExtensions
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions
- uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  commentId: M:Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
  isExternal: true
  name: SecureAccess(Object, Int32, String)
  nameWithType: SecurityExtensions.SecureAccess(Object, Int32, String)
  fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object, System.Int32, System.String)
  spec.csharp:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess(System.Object,System.Int32,System.String)
    name: SecureAccess
    nameWithType: SecurityExtensions.SecureAccess
    fullName: Sin.Net.Domain.System.Security.SecurityExtensions.SecureAccess
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Sin.Net.Domain.System.Security
  commentId: N:Sin.Net.Domain.System.Security
  name: Sin.Net.Domain.System.Security
  nameWithType: Sin.Net.Domain.System.Security
  fullName: Sin.Net.Domain.System.Security
- uid: Sin.Net.Domain.Persistence.IExportable.Setup*
  commentId: Overload:Sin.Net.Domain.Persistence.IExportable.Setup
  name: Setup
  nameWithType: IExportable.Setup
  fullName: Sin.Net.Domain.Persistence.IExportable.Setup
- uid: Sin.Net.Domain.Persistence.Settings.SettingsBase
  commentId: T:Sin.Net.Domain.Persistence.Settings.SettingsBase
  parent: Sin.Net.Domain.Persistence.Settings
  name: SettingsBase
  nameWithType: SettingsBase
  fullName: Sin.Net.Domain.Persistence.Settings.SettingsBase
- uid: Sin.Net.Domain.Persistence.IExportable
  commentId: T:Sin.Net.Domain.Persistence.IExportable
  parent: Sin.Net.Domain.Persistence
  name: IExportable
  nameWithType: IExportable
  fullName: Sin.Net.Domain.Persistence.IExportable
- uid: Sin.Net.Domain.Persistence.Settings
  commentId: N:Sin.Net.Domain.Persistence.Settings
  name: Sin.Net.Domain.Persistence.Settings
  nameWithType: Sin.Net.Domain.Persistence.Settings
  fullName: Sin.Net.Domain.Persistence.Settings
- uid: Sin.Net.Domain.Persistence.IExportable.Build*
  commentId: Overload:Sin.Net.Domain.Persistence.IExportable.Build
  name: Build
  nameWithType: IExportable.Build
  fullName: Sin.Net.Domain.Persistence.IExportable.Build
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Sin.Net.Domain.Persistence.Adapter.IAdaptable
  commentId: T:Sin.Net.Domain.Persistence.Adapter.IAdaptable
  parent: Sin.Net.Domain.Persistence.Adapter
  name: IAdaptable
  nameWithType: IAdaptable
  fullName: Sin.Net.Domain.Persistence.Adapter.IAdaptable
- uid: Sin.Net.Domain.Persistence.Adapter
  commentId: N:Sin.Net.Domain.Persistence.Adapter
  name: Sin.Net.Domain.Persistence.Adapter
  nameWithType: Sin.Net.Domain.Persistence.Adapter
  fullName: Sin.Net.Domain.Persistence.Adapter
- uid: Sin.Net.Domain.Persistence.IExportable.Export*
  commentId: Overload:Sin.Net.Domain.Persistence.IExportable.Export
  name: Export
  nameWithType: IExportable.Export
  fullName: Sin.Net.Domain.Persistence.IExportable.Export
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sin.Net.Domain.Persistence.IExportable.Type*
  commentId: Overload:Sin.Net.Domain.Persistence.IExportable.Type
  name: Type
  nameWithType: IExportable.Type
  fullName: Sin.Net.Domain.Persistence.IExportable.Type
